  services:
    mongodb:
      build:
        context: ./mongo_database
        dockerfile: Dockerfile
      container_name: statsdb_no_persistence
      ports:
        - "27017:27017"
      restart: unless-stopped
      healthcheck:
        test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
        interval: 10s
        timeout: 5s
        retries: 5

    api:
      build:
        context: ./dataAPI
        dockerfile: Dockerfile
      container_name: data_api
      depends_on:
        mongodb:
          condition: service_healthy
      ports:
        - "3018:3018"
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:3018/"]
        interval: 10s
        timeout: 10s
        retries: 5

    userdb:
      build:
        context: ./user_db
        dockerfile: Dockerfile
      container_name: userdb_persistence
      ports:
        - "5432:5432"
      volumes:
        - userdb_data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 10s
        timeout: 5s
        retries: 5

    user_db_gui:
      build:
        context: ./user_db_gui
        dockerfile: Dockerfile
      container_name: userdb_gui
      depends_on:
        userdb:
          condition: service_healthy
      ports:
        - "15432:80"
      restart: unless-stopped
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15432/"]
        interval: 10s
        timeout: 5s
        retries: 5

    frontend:
      build:
        context: ./stats_front
        dockerfile: Dockerfile
      
      container_name: stats_frontend
      ports:
        - "3000:3000"
      depends_on:
        api:
          condition: service_healthy
        userdb:
          condition: service_healthy

  volumes:
    userdb_data: